/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/page.tsx":
/*!**********************!*\
  !*** ./app/page.tsx ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ TodosPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_TodoApp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/TodoApp */ \"(app-pages-browser)/./components/TodoApp.tsx\");\n/* harmony import */ var _components_TodoApp__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_components_TodoApp__WEBPACK_IMPORTED_MODULE_2__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nfunction TodosPage() {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"main\", {\n        className: \"flex justify-center items-center min-h-screen bg-gray-100 p-6\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((_components_TodoApp__WEBPACK_IMPORTED_MODULE_2___default()), {}, void 0, false, {\n            fileName: \"D:\\\\OneDrive\\\\Documents\\\\altschool\\\\assignments\\\\alt-next-todo\\\\app\\\\page.tsx\",\n            lineNumber: 9,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\OneDrive\\\\Documents\\\\altschool\\\\assignments\\\\alt-next-todo\\\\app\\\\page.tsx\",\n        lineNumber: 8,\n        columnNumber: 5\n    }, this);\n} // \"use client\";\n // import React, { useState, useEffect } from \"react\";\n // export default function HomePage() {\n //   const [markdownList, setMarkdownList] = useState<any[]>([]);\n //   const [newPost, setNewPost] = useState({ title: \"\", content: \"\" });\n //   // Load markdown content from API\n //   useEffect(() => {\n //     const fetchMarkdown = async () => {\n //       try {\n //         const res = await fetch(\"/api/markdown\");\n //         const data = await res.json();\n //         setMarkdownList(data);\n //       } catch (err) {\n //         console.error(\"Failed to load:\", err);\n //       }\n //     };\n //     fetchMarkdown();\n //   }, []);\n //   // Save new markdown content\n //   const handleSave = async () => {\n //     if (!newPost.title || !newPost.content) return;\n //     try {\n //       const res = await fetch(\"/api/markdown\", {\n //         method: \"POST\",\n //         headers: { \"Content-Type\": \"application/json\" },\n //         body: JSON.stringify(newPost),\n //       });\n //       const data = await res.json();\n //       alert(\"Saved successfully!\");\n //       setMarkdownList((prev) => [data, ...prev]);\n //       setNewPost({ title: \"\", content: \"\" });\n //     } catch (err) {\n //       console.error(\"Failed to save:\", err);\n //     }\n //   };\n //   return (\n //     <div className=\"max-w-2xl mx-auto p-6\">\n //       <h1 className=\"text-2xl font-bold mb-4\">Markdown API Demo</h1>\n //       <div className=\"mb-6\">\n //         <input\n //           type=\"text\"\n //           placeholder=\"Title\"\n //           className=\"w-full border p-2 mb-2 rounded\"\n //           value={newPost.title}\n //           onChange={(e) => setNewPost({ ...newPost, title: e.target.value })}\n //         />\n //         <textarea\n //           placeholder=\"Write markdown content...\"\n //           className=\"w-full border p-2 mb-2 rounded h-24\"\n //           value={newPost.content}\n //           onChange={(e) => setNewPost({ ...newPost, content: e.target.value })}\n //         />\n //         <button\n //           onClick={handleSave}\n //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n //         >\n //           Save\n //         </button>\n //       </div>\n //       <ul className=\"space-y-4\">\n //         {markdownList.map((item) => (\n //           <li key={item.id} className=\"border rounded p-3\">\n //             <h2 className=\"font-semibold\">{item.title}</h2>\n //             <p className=\"text-gray-700\">{item.body}</p>\n //           </li>\n //         ))}\n //       </ul>\n //     </div>\n //   );\n // }\n_c = TodosPage;\nvar _c;\n$RefreshReg$(_c, \"TodosPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBRTBCO0FBQ2tCO0FBRTdCLFNBQVNFO0lBQ3RCLHFCQUNFLDhEQUFDQztRQUFLQyxXQUFVO2tCQUNkLDRFQUFDSCw0REFBT0E7Ozs7Ozs7Ozs7QUFHZCxFQVFBLGdCQUFnQjtDQUVoQixzREFBc0Q7Q0FFdEQsdUNBQXVDO0NBQ3ZDLGlFQUFpRTtDQUNqRSx3RUFBd0U7Q0FFeEUsc0NBQXNDO0NBQ3RDLHNCQUFzQjtDQUN0QiwwQ0FBMEM7Q0FDMUMsY0FBYztDQUNkLG9EQUFvRDtDQUNwRCx5Q0FBeUM7Q0FDekMsaUNBQWlDO0NBQ2pDLHdCQUF3QjtDQUN4QixpREFBaUQ7Q0FDakQsVUFBVTtDQUNWLFNBQVM7Q0FDVCx1QkFBdUI7Q0FDdkIsWUFBWTtDQUVaLGlDQUFpQztDQUNqQyxxQ0FBcUM7Q0FDckMsc0RBQXNEO0NBQ3RELFlBQVk7Q0FDWixtREFBbUQ7Q0FDbkQsMEJBQTBCO0NBQzFCLDJEQUEyRDtDQUMzRCx5Q0FBeUM7Q0FDekMsWUFBWTtDQUNaLHVDQUF1QztDQUN2QyxzQ0FBc0M7Q0FDdEMsb0RBQW9EO0NBQ3BELGdEQUFnRDtDQUNoRCxzQkFBc0I7Q0FDdEIsK0NBQStDO0NBQy9DLFFBQVE7Q0FDUixPQUFPO0NBRVAsYUFBYTtDQUNiLDhDQUE4QztDQUM5Qyx1RUFBdUU7Q0FFdkUsK0JBQStCO0NBQy9CLGlCQUFpQjtDQUNqQix3QkFBd0I7Q0FDeEIsZ0NBQWdDO0NBQ2hDLHVEQUF1RDtDQUN2RCxrQ0FBa0M7Q0FDbEMsZ0ZBQWdGO0NBQ2hGLGFBQWE7Q0FDYixvQkFBb0I7Q0FDcEIsb0RBQW9EO0NBQ3BELDREQUE0RDtDQUM1RCxvQ0FBb0M7Q0FDcEMsa0ZBQWtGO0NBQ2xGLGFBQWE7Q0FDYixrQkFBa0I7Q0FDbEIsaUNBQWlDO0NBQ2pDLG1GQUFtRjtDQUNuRixZQUFZO0NBQ1osaUJBQWlCO0NBQ2pCLG9CQUFvQjtDQUNwQixlQUFlO0NBRWYsbUNBQW1DO0NBQ25DLHdDQUF3QztDQUN4Qyw4REFBOEQ7Q0FDOUQsOERBQThEO0NBQzlELDJEQUEyRDtDQUMzRCxrQkFBa0I7Q0FDbEIsY0FBYztDQUNkLGNBQWM7Q0FDZCxhQUFhO0NBQ2IsT0FBTztDQUNQLElBQUk7S0ExRm9CQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvcGFnZS50c3g/NzYwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFRvZG9BcHAgZnJvbSBcIi4uL2NvbXBvbmVudHMvVG9kb0FwcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBUb2Rvc1BhZ2UoKSB7XG4gIHJldHVybiAoXG4gICAgPG1haW4gY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgbWluLWgtc2NyZWVuIGJnLWdyYXktMTAwIHAtNlwiPlxuICAgICAgPFRvZG9BcHAgLz5cbiAgICA8L21haW4+XG4gICk7XG59XG5cblxuXG5cblxuXG5cbi8vIFwidXNlIGNsaWVudFwiO1xuXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gXCJyZWFjdFwiO1xuXG4vLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBIb21lUGFnZSgpIHtcbi8vICAgY29uc3QgW21hcmtkb3duTGlzdCwgc2V0TWFya2Rvd25MaXN0XSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4vLyAgIGNvbnN0IFtuZXdQb3N0LCBzZXROZXdQb3N0XSA9IHVzZVN0YXRlKHsgdGl0bGU6IFwiXCIsIGNvbnRlbnQ6IFwiXCIgfSk7XG5cbi8vICAgLy8gTG9hZCBtYXJrZG93biBjb250ZW50IGZyb20gQVBJXG4vLyAgIHVzZUVmZmVjdCgoKSA9PiB7XG4vLyAgICAgY29uc3QgZmV0Y2hNYXJrZG93biA9IGFzeW5jICgpID0+IHtcbi8vICAgICAgIHRyeSB7XG4vLyAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiL2FwaS9tYXJrZG93blwiKTtcbi8vICAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4vLyAgICAgICAgIHNldE1hcmtkb3duTGlzdChkYXRhKTtcbi8vICAgICAgIH0gY2F0Y2ggKGVycikge1xuLy8gICAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGxvYWQ6XCIsIGVycik7XG4vLyAgICAgICB9XG4vLyAgICAgfTtcbi8vICAgICBmZXRjaE1hcmtkb3duKCk7XG4vLyAgIH0sIFtdKTtcblxuLy8gICAvLyBTYXZlIG5ldyBtYXJrZG93biBjb250ZW50XG4vLyAgIGNvbnN0IGhhbmRsZVNhdmUgPSBhc3luYyAoKSA9PiB7XG4vLyAgICAgaWYgKCFuZXdQb3N0LnRpdGxlIHx8ICFuZXdQb3N0LmNvbnRlbnQpIHJldHVybjtcbi8vICAgICB0cnkge1xuLy8gICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXCIvYXBpL21hcmtkb3duXCIsIHtcbi8vICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbi8vICAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuLy8gICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShuZXdQb3N0KSxcbi8vICAgICAgIH0pO1xuLy8gICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4vLyAgICAgICBhbGVydChcIlNhdmVkIHN1Y2Nlc3NmdWxseSFcIik7XG4vLyAgICAgICBzZXRNYXJrZG93bkxpc3QoKHByZXYpID0+IFtkYXRhLCAuLi5wcmV2XSk7XG4vLyAgICAgICBzZXROZXdQb3N0KHsgdGl0bGU6IFwiXCIsIGNvbnRlbnQ6IFwiXCIgfSk7XG4vLyAgICAgfSBjYXRjaCAoZXJyKSB7XG4vLyAgICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIHNhdmU6XCIsIGVycik7XG4vLyAgICAgfVxuLy8gICB9O1xuXG4vLyAgIHJldHVybiAoXG4vLyAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtdy0yeGwgbXgtYXV0byBwLTZcIj5cbi8vICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgbWItNFwiPk1hcmtkb3duIEFQSSBEZW1vPC9oMT5cblxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYi02XCI+XG4vLyAgICAgICAgIDxpbnB1dFxuLy8gICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbi8vICAgICAgICAgICBwbGFjZWhvbGRlcj1cIlRpdGxlXCJcbi8vICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgYm9yZGVyIHAtMiBtYi0yIHJvdW5kZWRcIlxuLy8gICAgICAgICAgIHZhbHVlPXtuZXdQb3N0LnRpdGxlfVxuLy8gICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0TmV3UG9zdCh7IC4uLm5ld1Bvc3QsIHRpdGxlOiBlLnRhcmdldC52YWx1ZSB9KX1cbi8vICAgICAgICAgLz5cbi8vICAgICAgICAgPHRleHRhcmVhXG4vLyAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJXcml0ZSBtYXJrZG93biBjb250ZW50Li4uXCJcbi8vICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgYm9yZGVyIHAtMiBtYi0yIHJvdW5kZWQgaC0yNFwiXG4vLyAgICAgICAgICAgdmFsdWU9e25ld1Bvc3QuY29udGVudH1cbi8vICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldE5ld1Bvc3QoeyAuLi5uZXdQb3N0LCBjb250ZW50OiBlLnRhcmdldC52YWx1ZSB9KX1cbi8vICAgICAgICAgLz5cbi8vICAgICAgICAgPGJ1dHRvblxuLy8gICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVNhdmV9XG4vLyAgICAgICAgICAgY2xhc3NOYW1lPVwiYmctYmx1ZS02MDAgdGV4dC13aGl0ZSBweC00IHB5LTIgcm91bmRlZCBob3ZlcjpiZy1ibHVlLTcwMFwiXG4vLyAgICAgICAgID5cbi8vICAgICAgICAgICBTYXZlXG4vLyAgICAgICAgIDwvYnV0dG9uPlxuLy8gICAgICAgPC9kaXY+XG5cbi8vICAgICAgIDx1bCBjbGFzc05hbWU9XCJzcGFjZS15LTRcIj5cbi8vICAgICAgICAge21hcmtkb3duTGlzdC5tYXAoKGl0ZW0pID0+IChcbi8vICAgICAgICAgICA8bGkga2V5PXtpdGVtLmlkfSBjbGFzc05hbWU9XCJib3JkZXIgcm91bmRlZCBwLTNcIj5cbi8vICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJmb250LXNlbWlib2xkXCI+e2l0ZW0udGl0bGV9PC9oMj5cbi8vICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtZ3JheS03MDBcIj57aXRlbS5ib2R5fTwvcD5cbi8vICAgICAgICAgICA8L2xpPlxuLy8gICAgICAgICApKX1cbi8vICAgICAgIDwvdWw+XG4vLyAgICAgPC9kaXY+XG4vLyAgICk7XG4vLyB9XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJUb2RvQXBwIiwiVG9kb3NQYWdlIiwibWFpbiIsImNsYXNzTmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/TodoApp.tsx":
/*!********************************!*\
  !*** ./components/TodoApp.tsx ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// type Todo = {\n//   id: string;\n//   text: string;\n//   completed: boolean;\n// };\n// export default function TodoApp() {\n//   const [todos, setTodos] = useState<Todo[]>([]);\n//   const [text, setText] = useState(\"\");\n//   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const todosPerPage = 20;\n//   // Auto-load todos from API\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n//         const demoTodos = res.data.slice(0, 100).map((p: any) => ({\n//           id: p.id.toString(),\n//           text: p.title,\n//           completed: Math.random() > 0.7,\n//         }));\n//         setTodos(demoTodos);\n//       } catch (error) {\n//         console.error(\"Error loading todos:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchTodos();\n//   }, []);\n//   const addTodo = (e?: React.FormEvent) => {\n//     e?.preventDefault();\n//     if (!text.trim()) return;\n//     setTodos((prev) => [\n//       { id: Date.now().toString(), text, completed: false },\n//       ...prev,\n//     ]);\n//     setText(\"\");\n//   };\n//   const toggleTodo = (id: string) => {\n//     setTodos((prev) =>\n//       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n//     );\n//   };\n//   const deleteTodo = (id: string) => {\n//     setTodos((prev) => prev.filter((t) => t.id !== id));\n//   };\n//   const clearCompleted = () => {\n//     setTodos((prev) => prev.filter((t) => !t.completed));\n//   };\n//   const markAllDone = () => {\n//     setTodos((prev) => prev.map((t) => ({ ...t, completed: true })));\n//   };\n//   const deleteAll = () => {\n//     setTodos([]);\n//   };\n//   const filtered = todos.filter((t) => {\n//     if (filter === \"all\") return true;\n//     if (filter === \"active\") return !t.completed;\n//     return t.completed;\n//   });\n//   const totalPages = Math.ceil(filtered.length / todosPerPage);\n//   const startIndex = (page - 1) * todosPerPage;\n//   const paginatedTodos = filtered.slice(startIndex, startIndex + todosPerPage);\n//   if (loading) {\n//     return (\n//       <div className=\"w-full h-screen flex justify-center items-center text-lg text-blue-700 bg-gradient-to-br from-blue-50 to-pink-100\">\n//         Loading tasks...\n//       </div>\n//     );\n//   }\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-pink-50 to-purple-100 flex justify-center items-center p-8\">\n//       <div className=\"backdrop-blur-md bg-white/70 text-gray-800 rounded-3xl shadow-2xl p-10 w-full max-w-4xl border border-white/50 transition hover:shadow-pink-200\">\n//         <h1 className=\"text-4xl font-semibold mb-6 text-center text-blue-600 drop-shadow-sm\">\n//           My To-Do List 🌸\n//         </h1>\n//         <form onSubmit={addTodo} className=\"flex gap-2 mb-6\">\n//           <input\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             placeholder=\"Add a new task...\"\n//             className=\"flex-1 px-4 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-200 bg-white/70\"\n//           />\n//           <button\n//             type=\"submit\"\n//             className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md shadow-md hover:shadow-lg transition\"\n//           >\n//             Add\n//           </button>\n//         </form>\n//         <div className=\"flex items-center justify-between mb-4 text-sm flex-wrap\">\n//           <div className=\"flex gap-2\">\n//             {[\"all\", \"active\", \"completed\"].map((f) => (\n//               <button\n//                 key={f}\n//                 onClick={() => {\n//                   setFilter(f as any);\n//                   setPage(1);\n//                 }}\n//                 className={`px-3 py-1 rounded-md transition ${\n//                   filter === f\n//                     ? \"bg-blue-500 text-white\"\n//                     : \"bg-blue-100 hover:bg-blue-200 text-blue-700\"\n//                 }`}\n//               >\n//                 {f[0].toUpperCase() + f.slice(1)}\n//               </button>\n//             ))}\n//           </div>\n//           <span className=\"text-gray-600\">\n//             {todos.filter((t) => !t.completed).length} left\n//           </span>\n//         </div>\n//         <ul className=\"divide-y divide-blue-100\">\n//           {paginatedTodos.map((todo) => (\n//             <li\n//               key={todo.id}\n//               className=\"flex items-center justify-between py-3 px-2 hover:bg-blue-50/70 rounded-md transition\"\n//             >\n//               <div className=\"flex items-center gap-3\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={todo.completed}\n//                   onChange={() => toggleTodo(todo.id)}\n//                   className=\"w-4 h-4 accent-blue-500\"\n//                 />\n//                 <span\n//                   className={`${\n//                     todo.completed\n//                       ? \"line-through text-blue-400\"\n//                       : \"text-gray-700\"\n//                   }`}\n//                 >\n//                   {todo.text}\n//                 </span>\n//               </div>\n//               <button\n//                 onClick={() => deleteTodo(todo.id)}\n//                 className=\"text-red-400 hover:text-red-600 text-sm transition\"\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3 text-sm\">\n//           <button\n//             onClick={clearCompleted}\n//             className=\"px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded-md text-blue-700 transition\"\n//           >\n//             Clear Completed\n//           </button>\n//           <button\n//             onClick={markAllDone}\n//             className=\"px-3 py-1 bg-green-400 hover:bg-green-500 text-white rounded-md transition\"\n//           >\n//             Mark All Done\n//           </button>\n//           <button\n//             onClick={deleteAll}\n//             className=\"px-3 py-1 bg-red-400 hover:bg-red-500 text-white rounded-md transition\"\n//           >\n//             Delete All\n//           </button>\n//         </div>\n//         {/* Pagination Controls */}\n//         <div className=\"flex justify-center gap-4 mt-8 text-sm\">\n//           <button\n//             onClick={() => setPage((p) => Math.max(p - 1, 1))}\n//             disabled={page === 1}\n//             className={`px-4 py-2 rounded-md ${\n//               page === 1\n//                 ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n//                 : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n//             }`}\n//           >\n//             Previous\n//           </button>\n//           <span className=\"text-blue-600\">\n//             Page {page} of {totalPages}\n//           </span>\n//           <button\n//             onClick={() => setPage((p) => Math.min(p + 1, totalPages))}\n//             disabled={page === totalPages}\n//             className={`px-4 py-2 rounded-md ${\n//               page === totalPages\n//                 ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n//                 : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n//             }`}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// // \"use client\";\n// // import React, { useEffect, useState } from \"react\";\n// // import axios from \"axios\";\n// // type Todo = {\n// //   id: string;\n// //   text: string;\n// //   completed: boolean;\n// // };\n// // export default function TodoApp() {\n// //   const [todos, setTodos] = useState<Todo[]>([]);\n// //   const [text, setText] = useState(\"\");\n// //   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n// //   const [loading, setLoading] = useState(true);\n// //   const [page, setPage] = useState(1);\n// //   const todosPerPage = 20;\n// //   // Auto-load todos from the API\n// //   useEffect(() => {\n// //     const fetchTodos = async () => {\n// //       try {\n// //         const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n// //         const demoTodos = res.data.slice(0, 100).map((p: any) => ({\n// //           id: p.id.toString(),\n// //           text: p.title,\n// //           completed: Math.random() > 0.7, // randomly completed some\n// //         }));\n// //         setTodos(demoTodos);\n// //       } catch (error) {\n// //         console.error(\"Error loading todos:\", error);\n// //       } finally {\n// //         setLoading(false);\n// //       }\n// //     };\n// //     fetchTodos();\n// //   }, []);\n// //   const addTodo = (e?: React.FormEvent) => {\n// //     e?.preventDefault();\n// //     if (!text.trim()) return;\n// //     setTodos((prev) => [\n// //       { id: Date.now().toString(), text, completed: false },\n// //       ...prev,\n// //     ]);\n// //     setText(\"\");\n// //   };\n// //   const toggleTodo = (id: string) => {\n// //     setTodos((prev) =>\n// //       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n// //     );\n// //   };\n// //   const deleteTodo = (id: string) => {\n// //     setTodos((prev) => prev.filter((t) => t.id !== id));\n// //   };\n// //   const clearCompleted = () => {\n// //     setTodos((prev) => prev.filter((t) => !t.completed));\n// //   };\n// //   const markAllDone = () => {\n// //     setTodos((prev) => prev.map((t) => ({ ...t, completed: true })));\n// //   };\n// //   const deleteAll = () => {\n// //     setTodos([]);\n// //   };\n// //   const filtered = todos.filter((t) => {\n// //     if (filter === \"all\") return true;\n// //     if (filter === \"active\") return !t.completed;\n// //     return t.completed;\n// //   });\n// //   const totalPages = Math.ceil(filtered.length / todosPerPage);\n// //   const startIndex = (page - 1) * todosPerPage;\n// //   const paginatedTodos = filtered.slice(startIndex, startIndex + todosPerPage);\n// //   if (loading) {\n// //     return (\n// //       <div className=\"w-full max-w-2xl mx-auto mt-20 text-center text-lg text-blue-600\">\n// //         Loading tasks...\n// //       </div>\n// //     );\n// //   }\n// //   return (\n// //     <div className=\"bg-white text-gray-800 rounded-2xl shadow-lg p-8 w-full max-w-3xl mx-auto mt-10 border border-gray-100\">\n// //       <h1 className=\"text-4xl font-semibold mb-6 text-center text-blue-600\">\n// //         My To-Do List 🌸\n// //       </h1>\n// //       <form onSubmit={addTodo} className=\"flex gap-2 mb-6\">\n// //         <input\n// //           value={text}\n// //           onChange={(e) => setText(e.target.value)}\n// //           placeholder=\"Add a new task...\"\n// //           className=\"flex-1 px-4 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\n// //         />\n// //         <button\n// //           type=\"submit\"\n// //           className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition\"\n// //         >\n// //           Add\n// //         </button>\n// //       </form>\n// //       <div className=\"flex items-center justify-between mb-4 text-sm\">\n// //         <div className=\"flex gap-2 flex-wrap\">\n// //           {[\"all\", \"active\", \"completed\"].map((f) => (\n// //             <button\n// //               key={f}\n// //               onClick={() => {\n// //                 setFilter(f as any);\n// //                 setPage(1);\n// //               }}\n// //               className={`px-3 py-1 rounded-md transition ${\n// //                 filter === f\n// //                   ? \"bg-blue-500 text-white\"\n// //                   : \"bg-blue-100 hover:bg-blue-200 text-blue-700\"\n// //               }`}\n// //             >\n// //               {f[0].toUpperCase() + f.slice(1)}\n// //             </button>\n// //           ))}\n// //         </div>\n// //         <span>{todos.filter((t) => !t.completed).length} left</span>\n// //       </div>\n// //       <ul className=\"divide-y divide-blue-100\">\n// //         {paginatedTodos.map((todo) => (\n// //           <li\n// //             key={todo.id}\n// //             className=\"flex items-center justify-between py-3 px-2 hover:bg-blue-50 rounded-md transition\"\n// //           >\n// //             <div className=\"flex items-center gap-3\">\n// //               <input\n// //                 type=\"checkbox\"\n// //                 checked={todo.completed}\n// //                 onChange={() => toggleTodo(todo.id)}\n// //                 className=\"w-4 h-4 accent-blue-500\"\n// //               />\n// //               <span\n// //                 className={`${\n// //                   todo.completed\n// //                     ? \"line-through text-blue-400\"\n// //                     : \"text-gray-700\"\n// //                 }`}\n// //               >\n// //                 {todo.text}\n// //               </span>\n// //             </div>\n// //             <button\n// //               onClick={() => deleteTodo(todo.id)}\n// //               className=\"text-red-400 hover:text-red-600 text-sm transition\"\n// //             >\n// //               Delete\n// //             </button>\n// //           </li>\n// //         ))}\n// //       </ul>\n// //       <div className=\"flex items-center justify-between mt-6 flex-wrap gap-3 text-sm\">\n// //         <button\n// //           onClick={clearCompleted}\n// //           className=\"px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded-md text-blue-700 transition\"\n// //         >\n// //           Clear Completed\n// //         </button>\n// //         <button\n// //           onClick={markAllDone}\n// //           className=\"px-3 py-1 bg-green-400 hover:bg-green-500 text-white rounded-md transition\"\n// //         >\n// //           Mark All Done\n// //         </button>\n// //         <button\n// //           onClick={deleteAll}\n// //           className=\"px-3 py-1 bg-red-400 hover:bg-red-500 text-white rounded-md transition\"\n// //         >\n// //           Delete All\n// //         </button>\n// //       </div>\n// //       {/* Pagination Controls */}\n// //       <div className=\"flex justify-center gap-4 mt-8 text-sm\">\n// //         <button\n// //           onClick={() => setPage((p) => Math.max(p - 1, 1))}\n// //           disabled={page === 1}\n// //           className={`px-4 py-2 rounded-md ${\n// //             page === 1\n// //               ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n// //               : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n// //           }`}\n// //         >\n// //           Previous\n// //         </button>\n// //         <span className=\"text-blue-600\">\n// //           Page {page} of {totalPages}\n// //         </span>\n// //         <button\n// //           onClick={() => setPage((p) => Math.min(p + 1, totalPages))}\n// //           disabled={page === totalPages}\n// //           className={`px-4 py-2 rounded-md ${\n// //             page === totalPages\n// //               ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n// //               : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n// //           }`}\n// //         >\n// //           Next\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n// // // \"use client\";\n// // // import React, { useEffect, useState } from \"react\";\n// // // import axios from \"axios\";\n// // // type Todo = {\n// // //   id: string;\n// // //   text: string;\n// // //   completed: boolean;\n// // // };\n// // // export default function TodoApp() {\n// // //   const [todos, setTodos] = useState<Todo[]>([]);\n// // //   const [text, setText] = useState(\"\");\n// // //   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n// // //   const [loading, setLoading] = useState(true);\n// // //   // Automatically load demo todos from API once\n// // //   useEffect(() => {\n// // //     const fetchTodos = async () => {\n// // //       try {\n// // //         const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n// // //         const demoTodos = res.data.slice(0, 5).map((p: any) => ({\n// // //           id: p.id.toString(),\n// // //           text: p.title,\n// // //           completed: false,\n// // //         }));\n// // //         setTodos(demoTodos);\n// // //       } catch (error) {\n// // //         console.error(\"Error loading todos:\", error);\n// // //       } finally {\n// // //         setLoading(false);\n// // //       }\n// // //     };\n// // //     fetchTodos();\n// // //   }, []);\n// // //   const addTodo = (e?: React.FormEvent) => {\n// // //     e?.preventDefault();\n// // //     if (!text.trim()) return;\n// // //     setTodos((prev) => [\n// // //       { id: Date.now().toString(), text, completed: false },\n// // //       ...prev,\n// // //     ]);\n// // //     setText(\"\");\n// // //   };\n// // //   const toggleTodo = (id: string) => {\n// // //     setTodos((prev) =>\n// // //       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n// // //     );\n// // //   };\n// // //   const deleteTodo = (id: string) => {\n// // //     setTodos((prev) => prev.filter((t) => t.id !== id));\n// // //   };\n// // //   const clearCompleted = () => {\n// // //     setTodos((prev) => prev.filter((t) => !t.completed));\n// // //   };\n// // //   const markAllDone = () => {\n// // //     setTodos((prev) => prev.map((t) => ({ ...t, completed: true })));\n// // //   };\n// // //   const deleteAll = () => {\n// // //     setTodos([]);\n// // //   };\n// // //   const filtered = todos.filter((t) => {\n// // //     if (filter === \"all\") return true;\n// // //     if (filter === \"active\") return !t.completed;\n// // //     return t.completed;\n// // //   });\n// // //   if (loading) {\n// // //     return (\n// // //       <div className=\"w-full max-w-md mx-auto mt-20 text-center text-lg text-blue-600\">\n// // //         Loading tasks...\n// // //       </div>\n// // //     );\n// // //   }\n// // //   return (\n// // //     <div\n// // //       className=\"bg-white text-gray-800 rounded-2xl shadow-lg p-6 w-full max-w-md mx-auto mt-10 border border-gray-100\"\n// // //     >\n// // //       <h1 className=\"text-3xl font-semibold mb-6 text-center text-blue-600\">\n// // //         My To-Do List 🌸\n// // //       </h1>\n// // //       <form onSubmit={addTodo} className=\"flex gap-2 mb-4\">\n// // //         <input\n// // //           value={text}\n// // //           onChange={(e) => setText(e.target.value)}\n// // //           placeholder=\"Add a new task...\"\n// // //           className=\"flex-1 px-4 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\n// // //         />\n// // //         <button\n// // //           type=\"submit\"\n// // //           className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition\"\n// // //         >\n// // //           Add\n// // //         </button>\n// // //       </form>\n// // //       <div className=\"flex items-center justify-between mb-4 text-sm\">\n// // //         <div className=\"flex gap-2\">\n// // //           {[\"all\", \"active\", \"completed\"].map((f) => (\n// // //             <button\n// // //               key={f}\n// // //               onClick={() => setFilter(f as any)}\n// // //               className={`px-3 py-1 rounded-md transition ${\n// // //                 filter === f\n// // //                   ? \"bg-blue-500 text-white\"\n// // //                   : \"bg-blue-100 hover:bg-blue-200 text-blue-700\"\n// // //               }`}\n// // //             >\n// // //               {f[0].toUpperCase() + f.slice(1)}\n// // //             </button>\n// // //           ))}\n// // //         </div>\n// // //         <span>{todos.filter((t) => !t.completed).length} left</span>\n// // //       </div>\n// // //       <ul className=\"divide-y divide-blue-100\">\n// // //         {filtered.map((todo) => (\n// // //           <li\n// // //             key={todo.id}\n// // //             className=\"flex items-center justify-between py-3 px-2 hover:bg-blue-50 rounded-md transition\"\n// // //           >\n// // //             <div className=\"flex items-center gap-3\">\n// // //               <input\n// // //                 type=\"checkbox\"\n// // //                 checked={todo.completed}\n// // //                 onChange={() => toggleTodo(todo.id)}\n// // //                 className=\"w-4 h-4 accent-blue-500\"\n// // //               />\n// // //               <span\n// // //                 className={`${\n// // //                   todo.completed\n// // //                     ? \"line-through text-blue-400\"\n// // //                     : \"text-gray-700\"\n// // //                 }`}\n// // //               >\n// // //                 {todo.text}\n// // //               </span>\n// // //             </div>\n// // //             <button\n// // //               onClick={() => deleteTodo(todo.id)}\n// // //               className=\"text-red-400 hover:text-red-600 text-sm transition\"\n// // //             >\n// // //               Delete\n// // //             </button>\n// // //           </li>\n// // //         ))}\n// // //       </ul>\n// // //       <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3 text-sm\">\n// // //         <button\n// // //           onClick={clearCompleted}\n// // //           className=\"px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded-md text-blue-700 transition\"\n// // //         >\n// // //           Clear Completed\n// // //         </button>\n// // //         <button\n// // //           onClick={markAllDone}\n// // //           className=\"px-3 py-1 bg-green-400 hover:bg-green-500 text-white rounded-md transition\"\n// // //         >\n// // //           Mark All Done\n// // //         </button>\n// // //         <button\n// // //           onClick={deleteAll}\n// // //           className=\"px-3 py-1 bg-red-400 hover:bg-red-500 text-white rounded-md transition\"\n// // //         >\n// // //           Delete All\n// // //         </button>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TodoApp.tsx\n"));

/***/ })

});