/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/TodoApp.tsx":
/*!********************************!*\
  !*** ./components/TodoApp.tsx ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// type Todo = {\n//   id: string;\n//   text: string;\n//   completed: boolean;\n// };\n// export default function TodoApp() {\n//   const [todos, setTodos] = useState<Todo[]>([]);\n//   const [text, setText] = useState(\"\");\n//   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n//   const [loading, setLoading] = useState(true);\n//   // Automatically load demo todos from API once\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n//         const demoTodos = res.data.slice(0, 5).map((p: any) => ({\n//           id: p.id.toString(),\n//           text: p.title,\n//           completed: false,\n//         }));\n//         setTodos(demoTodos);\n//       } catch (error) {\n//         console.error(\"Error loading todos:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchTodos();\n//   }, []);\n//   const addTodo = (e?: React.FormEvent) => {\n//     e?.preventDefault();\n//     if (!text.trim()) return;\n//     setTodos((prev) => [\n//       { id: Date.now().toString(), text, completed: false },\n//       ...prev,\n//     ]);\n//     setText(\"\");\n//   };\n//   const toggleTodo = (id: string) => {\n//     setTodos((prev) =>\n//       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n//     );\n//   };\n//   const deleteTodo = (id: string) => {\n//     setTodos((prev) => prev.filter((t) => t.id !== id));\n//   };\n//   const clearCompleted = () => {\n//     setTodos((prev) => prev.filter((t) => !t.completed));\n//   };\n//   const markAllDone = () => {\n//     setTodos((prev) => prev.map((t) => ({ ...t, completed: true })));\n//   };\n//   const deleteAll = () => {\n//     setTodos([]);\n//   };\n//   const filtered = todos.filter((t) => {\n//     if (filter === \"all\") return true;\n//     if (filter === \"active\") return !t.completed;\n//     return t.completed;\n//   });\n//   if (loading) {\n//     return (\n//       <div className=\"w-full max-w-md mx-auto mt-20 text-center text-lg text-blue-600\">\n//         Loading tasks...\n//       </div>\n//     );\n//   }\n//   return (\n//     <div\n//       className=\"bg-white text-gray-800 rounded-2xl shadow-lg p-6 w-full max-w-md mx-auto mt-10 border border-gray-100\"\n//     >\n//       <h1 className=\"text-3xl font-semibold mb-6 text-center text-blue-600\">\n//         My To-Do List ðŸŒ¸\n//       </h1>\n//       <form onSubmit={addTodo} className=\"flex gap-2 mb-4\">\n//         <input\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Add a new task...\"\n//           className=\"flex-1 px-4 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\n//         />\n//         <button\n//           type=\"submit\"\n//           className=\"px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md transition\"\n//         >\n//           Add\n//         </button>\n//       </form>\n//       <div className=\"flex items-center justify-between mb-4 text-sm\">\n//         <div className=\"flex gap-2\">\n//           {[\"all\", \"active\", \"completed\"].map((f) => (\n//             <button\n//               key={f}\n//               onClick={() => setFilter(f as any)}\n//               className={`px-3 py-1 rounded-md transition ${\n//                 filter === f\n//                   ? \"bg-blue-500 text-white\"\n//                   : \"bg-blue-100 hover:bg-blue-200 text-blue-700\"\n//               }`}\n//             >\n//               {f[0].toUpperCase() + f.slice(1)}\n//             </button>\n//           ))}\n//         </div>\n//         <span>{todos.filter((t) => !t.completed).length} left</span>\n//       </div>\n//       <ul className=\"divide-y divide-blue-100\">\n//         {filtered.map((todo) => (\n//           <li\n//             key={todo.id}\n//             className=\"flex items-center justify-between py-3 px-2 hover:bg-blue-50 rounded-md transition\"\n//           >\n//             <div className=\"flex items-center gap-3\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={todo.completed}\n//                 onChange={() => toggleTodo(todo.id)}\n//                 className=\"w-4 h-4 accent-blue-500\"\n//               />\n//               <span\n//                 className={`${\n//                   todo.completed\n//                     ? \"line-through text-blue-400\"\n//                     : \"text-gray-700\"\n//                 }`}\n//               >\n//                 {todo.text}\n//               </span>\n//             </div>\n//             <button\n//               onClick={() => deleteTodo(todo.id)}\n//               className=\"text-red-400 hover:text-red-600 text-sm transition\"\n//             >\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3 text-sm\">\n//         <button\n//           onClick={clearCompleted}\n//           className=\"px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded-md text-blue-700 transition\"\n//         >\n//           Clear Completed\n//         </button>\n//         <button\n//           onClick={markAllDone}\n//           className=\"px-3 py-1 bg-green-400 hover:bg-green-500 text-white rounded-md transition\"\n//         >\n//           Mark All Done\n//         </button>\n//         <button\n//           onClick={deleteAll}\n//           className=\"px-3 py-1 bg-red-400 hover:bg-red-500 text-white rounded-md transition\"\n//         >\n//           Delete All\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TodoApp.tsx\n"));

/***/ })

});