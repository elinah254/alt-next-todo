/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/TodoApp.tsx":
/*!********************************!*\
  !*** ./components/TodoApp.tsx ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import axios from \"axios\";\n// type Todo = {\n//   id: string;\n//   text: string;\n//   completed: boolean;\n// };\n// export default function TodoApp() {\n//   const [todos, setTodos] = useState<Todo[]>([]);\n//   const [text, setText] = useState(\"\");\n//   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n//   const [loading, setLoading] = useState(true);\n//   const [page, setPage] = useState(1);\n//   const todosPerPage = 20;\n//   // Auto-load todos from API\n//   useEffect(() => {\n//     const fetchTodos = async () => {\n//       try {\n//         const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n//         const demoTodos = res.data.slice(0, 100).map((p: any) => ({\n//           id: p.id.toString(),\n//           text: p.title,\n//           completed: Math.random() > 0.7,\n//         }));\n//         setTodos(demoTodos);\n//       } catch (error) {\n//         console.error(\"Error loading todos:\", error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n//     fetchTodos();\n//   }, []);\n//   const addTodo = (e?: React.FormEvent) => {\n//     e?.preventDefault();\n//     if (!text.trim()) return;\n//     setTodos((prev) => [\n//       { id: Date.now().toString(), text, completed: false },\n//       ...prev,\n//     ]);\n//     setText(\"\");\n//   };\n//   const toggleTodo = (id: string) => {\n//     setTodos((prev) =>\n//       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n//     );\n//   };\n//   const deleteTodo = (id: string) => {\n//     setTodos((prev) => prev.filter((t) => t.id !== id));\n//   };\n//   const clearCompleted = () => {\n//     setTodos((prev) => prev.filter((t) => !t.completed));\n//   };\n//   const markAllDone = () => {\n//     setTodos((prev) => prev.map((t) => ({ ...t, completed: true })));\n//   };\n//   const deleteAll = () => {\n//     setTodos([]);\n//   };\n//   const filtered = todos.filter((t) => {\n//     if (filter === \"all\") return true;\n//     if (filter === \"active\") return !t.completed;\n//     return t.completed;\n//   });\n//   const totalPages = Math.ceil(filtered.length / todosPerPage);\n//   const startIndex = (page - 1) * todosPerPage;\n//   const paginatedTodos = filtered.slice(startIndex, startIndex + todosPerPage);\n//   if (loading) {\n//     return (\n//       <div className=\"w-full h-screen flex justify-center items-center text-lg text-blue-700 bg-gradient-to-br from-blue-50 to-pink-100\">\n//         Loading tasks...\n//       </div>\n//     );\n//   }\n//   return (\n//     <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-pink-50 to-purple-100 flex justify-center items-center p-8\">\n//       <div className=\"backdrop-blur-md bg-white/70 text-gray-800 rounded-3xl shadow-2xl p-10 w-full max-w-4xl border border-white/50 transition hover:shadow-pink-200\">\n//         <h1 className=\"text-4xl font-semibold mb-6 text-center text-blue-600 drop-shadow-sm\">\n//           My To-Do List ðŸŒ¸\n//         </h1>\n//         <form onSubmit={addTodo} className=\"flex gap-2 mb-6\">\n//           <input\n//             value={text}\n//             onChange={(e) => setText(e.target.value)}\n//             placeholder=\"Add a new task...\"\n//             className=\"flex-1 px-4 py-2 border border-blue-200 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-200 bg-white/70\"\n//           />\n//           <button\n//             type=\"submit\"\n//             className=\"px-6 py-2 bg-blue-500 hover:bg-blue-600 text-white rounded-md shadow-md hover:shadow-lg transition\"\n//           >\n//             Add\n//           </button>\n//         </form>\n//         <div className=\"flex items-center justify-between mb-4 text-sm flex-wrap\">\n//           <div className=\"flex gap-2\">\n//             {[\"all\", \"active\", \"completed\"].map((f) => (\n//               <button\n//                 key={f}\n//                 onClick={() => {\n//                   setFilter(f as any);\n//                   setPage(1);\n//                 }}\n//                 className={`px-3 py-1 rounded-md transition ${\n//                   filter === f\n//                     ? \"bg-blue-500 text-white\"\n//                     : \"bg-blue-100 hover:bg-blue-200 text-blue-700\"\n//                 }`}\n//               >\n//                 {f[0].toUpperCase() + f.slice(1)}\n//               </button>\n//             ))}\n//           </div>\n//           <span className=\"text-gray-600\">\n//             {todos.filter((t) => !t.completed).length} left\n//           </span>\n//         </div>\n//         <ul className=\"divide-y divide-blue-100\">\n//           {paginatedTodos.map((todo) => (\n//             <li\n//               key={todo.id}\n//               className=\"flex items-center justify-between py-3 px-2 hover:bg-blue-50/70 rounded-md transition\"\n//             >\n//               <div className=\"flex items-center gap-3\">\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={todo.completed}\n//                   onChange={() => toggleTodo(todo.id)}\n//                   className=\"w-4 h-4 accent-blue-500\"\n//                 />\n//                 <span\n//                   className={`${\n//                     todo.completed\n//                       ? \"line-through text-blue-400\"\n//                       : \"text-gray-700\"\n//                   }`}\n//                 >\n//                   {todo.text}\n//                 </span>\n//               </div>\n//               <button\n//                 onClick={() => deleteTodo(todo.id)}\n//                 className=\"text-red-400 hover:text-red-600 text-sm transition\"\n//               >\n//                 Delete\n//               </button>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"flex flex-wrap justify-between items-center mt-6 gap-3 text-sm\">\n//           <button\n//             onClick={clearCompleted}\n//             className=\"px-3 py-1 bg-blue-100 hover:bg-blue-200 rounded-md text-blue-700 transition\"\n//           >\n//             Clear Completed\n//           </button>\n//           <button\n//             onClick={markAllDone}\n//             className=\"px-3 py-1 bg-green-400 hover:bg-green-500 text-white rounded-md transition\"\n//           >\n//             Mark All Done\n//           </button>\n//           <button\n//             onClick={deleteAll}\n//             className=\"px-3 py-1 bg-red-400 hover:bg-red-500 text-white rounded-md transition\"\n//           >\n//             Delete All\n//           </button>\n//         </div>\n//         {/* Pagination Controls */}\n//         <div className=\"flex justify-center gap-4 mt-8 text-sm\">\n//           <button\n//             onClick={() => setPage((p) => Math.max(p - 1, 1))}\n//             disabled={page === 1}\n//             className={`px-4 py-2 rounded-md ${\n//               page === 1\n//                 ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n//                 : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n//             }`}\n//           >\n//             Previous\n//           </button>\n//           <span className=\"text-blue-600\">\n//             Page {page} of {totalPages}\n//           </span>\n//           <button\n//             onClick={() => setPage((p) => Math.min(p + 1, totalPages))}\n//             disabled={page === totalPages}\n//             className={`px-4 py-2 rounded-md ${\n//               page === totalPages\n//                 ? \"bg-gray-100 text-gray-400 cursor-not-allowed\"\n//                 : \"bg-blue-100 hover:bg-blue-200 text-blue-700 transition\"\n//             }`}\n//           >\n//             Next\n//           </button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVG9kb0FwcC50c3giLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBRWhCLHNEQUFzRDtBQUN0RCw2QkFBNkI7QUFFN0IsZ0JBQWdCO0FBQ2hCLGdCQUFnQjtBQUNoQixrQkFBa0I7QUFDbEIsd0JBQXdCO0FBQ3hCLEtBQUs7QUFFTCxzQ0FBc0M7QUFDdEMsb0RBQW9EO0FBQ3BELDBDQUEwQztBQUMxQyxpRkFBaUY7QUFDakYsa0RBQWtEO0FBQ2xELHlDQUF5QztBQUN6Qyw2QkFBNkI7QUFFN0IsZ0NBQWdDO0FBQ2hDLHNCQUFzQjtBQUN0Qix1Q0FBdUM7QUFDdkMsY0FBYztBQUNkLHFGQUFxRjtBQUNyRixzRUFBc0U7QUFDdEUsaUNBQWlDO0FBQ2pDLDJCQUEyQjtBQUMzQiw0Q0FBNEM7QUFDNUMsZUFBZTtBQUNmLCtCQUErQjtBQUMvQiwwQkFBMEI7QUFDMUIsd0RBQXdEO0FBQ3hELG9CQUFvQjtBQUNwQiw2QkFBNkI7QUFDN0IsVUFBVTtBQUNWLFNBQVM7QUFDVCxvQkFBb0I7QUFDcEIsWUFBWTtBQUVaLCtDQUErQztBQUMvQywyQkFBMkI7QUFDM0IsZ0NBQWdDO0FBQ2hDLDJCQUEyQjtBQUMzQiwrREFBK0Q7QUFDL0QsaUJBQWlCO0FBQ2pCLFVBQVU7QUFDVixtQkFBbUI7QUFDbkIsT0FBTztBQUVQLHlDQUF5QztBQUN6Qyx5QkFBeUI7QUFDekIsK0VBQStFO0FBQy9FLFNBQVM7QUFDVCxPQUFPO0FBRVAseUNBQXlDO0FBQ3pDLDJEQUEyRDtBQUMzRCxPQUFPO0FBRVAsbUNBQW1DO0FBQ25DLDREQUE0RDtBQUM1RCxPQUFPO0FBRVAsZ0NBQWdDO0FBQ2hDLHdFQUF3RTtBQUN4RSxPQUFPO0FBRVAsOEJBQThCO0FBQzlCLG9CQUFvQjtBQUNwQixPQUFPO0FBRVAsMkNBQTJDO0FBQzNDLHlDQUF5QztBQUN6QyxvREFBb0Q7QUFDcEQsMEJBQTBCO0FBQzFCLFFBQVE7QUFFUixrRUFBa0U7QUFDbEUsa0RBQWtEO0FBQ2xELGtGQUFrRjtBQUVsRixtQkFBbUI7QUFDbkIsZUFBZTtBQUNmLDRJQUE0STtBQUM1SSwyQkFBMkI7QUFDM0IsZUFBZTtBQUNmLFNBQVM7QUFDVCxNQUFNO0FBRU4sYUFBYTtBQUNiLG1JQUFtSTtBQUNuSSwwS0FBMEs7QUFDMUssZ0dBQWdHO0FBQ2hHLDZCQUE2QjtBQUM3QixnQkFBZ0I7QUFFaEIsZ0VBQWdFO0FBQ2hFLG1CQUFtQjtBQUNuQiwyQkFBMkI7QUFDM0Isd0RBQXdEO0FBQ3hELDhDQUE4QztBQUM5Qyw2SUFBNkk7QUFDN0ksZUFBZTtBQUNmLG9CQUFvQjtBQUNwQiw0QkFBNEI7QUFDNUIsNkhBQTZIO0FBQzdILGNBQWM7QUFDZCxrQkFBa0I7QUFDbEIsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUVsQixxRkFBcUY7QUFDckYseUNBQXlDO0FBQ3pDLDJEQUEyRDtBQUMzRCx3QkFBd0I7QUFDeEIsMEJBQTBCO0FBQzFCLG1DQUFtQztBQUNuQyx5Q0FBeUM7QUFDekMsZ0NBQWdDO0FBQ2hDLHFCQUFxQjtBQUNyQixpRUFBaUU7QUFDakUsaUNBQWlDO0FBQ2pDLGlEQUFpRDtBQUNqRCxzRUFBc0U7QUFDdEUsc0JBQXNCO0FBQ3RCLGtCQUFrQjtBQUNsQixvREFBb0Q7QUFDcEQsMEJBQTBCO0FBQzFCLGtCQUFrQjtBQUNsQixtQkFBbUI7QUFDbkIsNkNBQTZDO0FBQzdDLDhEQUE4RDtBQUM5RCxvQkFBb0I7QUFDcEIsaUJBQWlCO0FBRWpCLG9EQUFvRDtBQUNwRCw0Q0FBNEM7QUFDNUMsa0JBQWtCO0FBQ2xCLDhCQUE4QjtBQUM5QixrSEFBa0g7QUFDbEgsZ0JBQWdCO0FBQ2hCLDBEQUEwRDtBQUMxRCx5QkFBeUI7QUFDekIsb0NBQW9DO0FBQ3BDLDZDQUE2QztBQUM3Qyx5REFBeUQ7QUFDekQsd0RBQXdEO0FBQ3hELHFCQUFxQjtBQUNyQix3QkFBd0I7QUFDeEIsbUNBQW1DO0FBQ25DLHFDQUFxQztBQUNyQyx1REFBdUQ7QUFDdkQsMENBQTBDO0FBQzFDLHdCQUF3QjtBQUN4QixvQkFBb0I7QUFDcEIsZ0NBQWdDO0FBQ2hDLDBCQUEwQjtBQUMxQix1QkFBdUI7QUFDdkIsd0JBQXdCO0FBQ3hCLHNEQUFzRDtBQUN0RCxpRkFBaUY7QUFDakYsa0JBQWtCO0FBQ2xCLHlCQUF5QjtBQUN6QiwwQkFBMEI7QUFDMUIsb0JBQW9CO0FBQ3BCLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFFaEIsMkZBQTJGO0FBQzNGLG9CQUFvQjtBQUNwQix1Q0FBdUM7QUFDdkMsc0dBQXNHO0FBQ3RHLGNBQWM7QUFDZCw4QkFBOEI7QUFDOUIsc0JBQXNCO0FBQ3RCLG9CQUFvQjtBQUNwQixvQ0FBb0M7QUFDcEMscUdBQXFHO0FBQ3JHLGNBQWM7QUFDZCw0QkFBNEI7QUFDNUIsc0JBQXNCO0FBQ3RCLG9CQUFvQjtBQUNwQixrQ0FBa0M7QUFDbEMsaUdBQWlHO0FBQ2pHLGNBQWM7QUFDZCx5QkFBeUI7QUFDekIsc0JBQXNCO0FBQ3RCLGlCQUFpQjtBQUVqQixzQ0FBc0M7QUFDdEMsbUVBQW1FO0FBQ25FLG9CQUFvQjtBQUNwQixpRUFBaUU7QUFDakUsb0NBQW9DO0FBQ3BDLGtEQUFrRDtBQUNsRCwyQkFBMkI7QUFDM0IsbUVBQW1FO0FBQ25FLDZFQUE2RTtBQUM3RSxrQkFBa0I7QUFDbEIsY0FBYztBQUNkLHVCQUF1QjtBQUN2QixzQkFBc0I7QUFDdEIsNkNBQTZDO0FBQzdDLDBDQUEwQztBQUMxQyxvQkFBb0I7QUFDcEIsb0JBQW9CO0FBQ3BCLDBFQUEwRTtBQUMxRSw2Q0FBNkM7QUFDN0Msa0RBQWtEO0FBQ2xELG9DQUFvQztBQUNwQyxtRUFBbUU7QUFDbkUsNkVBQTZFO0FBQzdFLGtCQUFrQjtBQUNsQixjQUFjO0FBQ2QsbUJBQW1CO0FBQ25CLHNCQUFzQjtBQUN0QixpQkFBaUI7QUFDakIsZUFBZTtBQUNmLGFBQWE7QUFDYixPQUFPO0FBQ1AsSUFBSSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL1RvZG9BcHAudHN4P2I0MjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gXCJ1c2UgY2xpZW50XCI7XHJcblxyXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG4vLyBpbXBvcnQgYXhpb3MgZnJvbSBcImF4aW9zXCI7XHJcblxyXG4vLyB0eXBlIFRvZG8gPSB7XHJcbi8vICAgaWQ6IHN0cmluZztcclxuLy8gICB0ZXh0OiBzdHJpbmc7XHJcbi8vICAgY29tcGxldGVkOiBib29sZWFuO1xyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVG9kb0FwcCgpIHtcclxuLy8gICBjb25zdCBbdG9kb3MsIHNldFRvZG9zXSA9IHVzZVN0YXRlPFRvZG9bXT4oW10pO1xyXG4vLyAgIGNvbnN0IFt0ZXh0LCBzZXRUZXh0XSA9IHVzZVN0YXRlKFwiXCIpO1xyXG4vLyAgIGNvbnN0IFtmaWx0ZXIsIHNldEZpbHRlcl0gPSB1c2VTdGF0ZTxcImFsbFwiIHwgXCJhY3RpdmVcIiB8IFwiY29tcGxldGVkXCI+KFwiYWxsXCIpO1xyXG4vLyAgIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xyXG4vLyAgIGNvbnN0IFtwYWdlLCBzZXRQYWdlXSA9IHVzZVN0YXRlKDEpO1xyXG4vLyAgIGNvbnN0IHRvZG9zUGVyUGFnZSA9IDIwO1xyXG5cclxuLy8gICAvLyBBdXRvLWxvYWQgdG9kb3MgZnJvbSBBUElcclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgY29uc3QgZmV0Y2hUb2RvcyA9IGFzeW5jICgpID0+IHtcclxuLy8gICAgICAgdHJ5IHtcclxuLy8gICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBheGlvcy5nZXQoXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHNcIik7XHJcbi8vICAgICAgICAgY29uc3QgZGVtb1RvZG9zID0gcmVzLmRhdGEuc2xpY2UoMCwgMTAwKS5tYXAoKHA6IGFueSkgPT4gKHtcclxuLy8gICAgICAgICAgIGlkOiBwLmlkLnRvU3RyaW5nKCksXHJcbi8vICAgICAgICAgICB0ZXh0OiBwLnRpdGxlLFxyXG4vLyAgICAgICAgICAgY29tcGxldGVkOiBNYXRoLnJhbmRvbSgpID4gMC43LFxyXG4vLyAgICAgICAgIH0pKTtcclxuLy8gICAgICAgICBzZXRUb2RvcyhkZW1vVG9kb3MpO1xyXG4vLyAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4vLyAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2FkaW5nIHRvZG9zOlwiLCBlcnJvcik7XHJcbi8vICAgICAgIH0gZmluYWxseSB7XHJcbi8vICAgICAgICAgc2V0TG9hZGluZyhmYWxzZSk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH07XHJcbi8vICAgICBmZXRjaFRvZG9zKCk7XHJcbi8vICAgfSwgW10pO1xyXG5cclxuLy8gICBjb25zdCBhZGRUb2RvID0gKGU/OiBSZWFjdC5Gb3JtRXZlbnQpID0+IHtcclxuLy8gICAgIGU/LnByZXZlbnREZWZhdWx0KCk7XHJcbi8vICAgICBpZiAoIXRleHQudHJpbSgpKSByZXR1cm47XHJcbi8vICAgICBzZXRUb2RvcygocHJldikgPT4gW1xyXG4vLyAgICAgICB7IGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCksIHRleHQsIGNvbXBsZXRlZDogZmFsc2UgfSxcclxuLy8gICAgICAgLi4ucHJldixcclxuLy8gICAgIF0pO1xyXG4vLyAgICAgc2V0VGV4dChcIlwiKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCB0b2dnbGVUb2RvID0gKGlkOiBzdHJpbmcpID0+IHtcclxuLy8gICAgIHNldFRvZG9zKChwcmV2KSA9PlxyXG4vLyAgICAgICBwcmV2Lm1hcCgodCkgPT4gKHQuaWQgPT09IGlkID8geyAuLi50LCBjb21wbGV0ZWQ6ICF0LmNvbXBsZXRlZCB9IDogdCkpXHJcbi8vICAgICApO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGRlbGV0ZVRvZG8gPSAoaWQ6IHN0cmluZykgPT4ge1xyXG4vLyAgICAgc2V0VG9kb3MoKHByZXYpID0+IHByZXYuZmlsdGVyKCh0KSA9PiB0LmlkICE9PSBpZCkpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGNsZWFyQ29tcGxldGVkID0gKCkgPT4ge1xyXG4vLyAgICAgc2V0VG9kb3MoKHByZXYpID0+IHByZXYuZmlsdGVyKCh0KSA9PiAhdC5jb21wbGV0ZWQpKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCBtYXJrQWxsRG9uZSA9ICgpID0+IHtcclxuLy8gICAgIHNldFRvZG9zKChwcmV2KSA9PiBwcmV2Lm1hcCgodCkgPT4gKHsgLi4udCwgY29tcGxldGVkOiB0cnVlIH0pKSk7XHJcbi8vICAgfTtcclxuXHJcbi8vICAgY29uc3QgZGVsZXRlQWxsID0gKCkgPT4ge1xyXG4vLyAgICAgc2V0VG9kb3MoW10pO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGZpbHRlcmVkID0gdG9kb3MuZmlsdGVyKCh0KSA9PiB7XHJcbi8vICAgICBpZiAoZmlsdGVyID09PSBcImFsbFwiKSByZXR1cm4gdHJ1ZTtcclxuLy8gICAgIGlmIChmaWx0ZXIgPT09IFwiYWN0aXZlXCIpIHJldHVybiAhdC5jb21wbGV0ZWQ7XHJcbi8vICAgICByZXR1cm4gdC5jb21wbGV0ZWQ7XHJcbi8vICAgfSk7XHJcblxyXG4vLyAgIGNvbnN0IHRvdGFsUGFnZXMgPSBNYXRoLmNlaWwoZmlsdGVyZWQubGVuZ3RoIC8gdG9kb3NQZXJQYWdlKTtcclxuLy8gICBjb25zdCBzdGFydEluZGV4ID0gKHBhZ2UgLSAxKSAqIHRvZG9zUGVyUGFnZTtcclxuLy8gICBjb25zdCBwYWdpbmF0ZWRUb2RvcyA9IGZpbHRlcmVkLnNsaWNlKHN0YXJ0SW5kZXgsIHN0YXJ0SW5kZXggKyB0b2Rvc1BlclBhZ2UpO1xyXG5cclxuLy8gICBpZiAobG9hZGluZykge1xyXG4vLyAgICAgcmV0dXJuIChcclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LWZ1bGwgaC1zY3JlZW4gZmxleCBqdXN0aWZ5LWNlbnRlciBpdGVtcy1jZW50ZXIgdGV4dC1sZyB0ZXh0LWJsdWUtNzAwIGJnLWdyYWRpZW50LXRvLWJyIGZyb20tYmx1ZS01MCB0by1waW5rLTEwMFwiPlxyXG4vLyAgICAgICAgIExvYWRpbmcgdGFza3MuLi5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICApO1xyXG4vLyAgIH1cclxuXHJcbi8vICAgcmV0dXJuIChcclxuLy8gICAgIDxkaXYgY2xhc3NOYW1lPVwibWluLWgtc2NyZWVuIGJnLWdyYWRpZW50LXRvLWJyIGZyb20tYmx1ZS01MCB2aWEtcGluay01MCB0by1wdXJwbGUtMTAwIGZsZXgganVzdGlmeS1jZW50ZXIgaXRlbXMtY2VudGVyIHAtOFwiPlxyXG4vLyAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJhY2tkcm9wLWJsdXItbWQgYmctd2hpdGUvNzAgdGV4dC1ncmF5LTgwMCByb3VuZGVkLTN4bCBzaGFkb3ctMnhsIHAtMTAgdy1mdWxsIG1heC13LTR4bCBib3JkZXIgYm9yZGVyLXdoaXRlLzUwIHRyYW5zaXRpb24gaG92ZXI6c2hhZG93LXBpbmstMjAwXCI+XHJcbi8vICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtNHhsIGZvbnQtc2VtaWJvbGQgbWItNiB0ZXh0LWNlbnRlciB0ZXh0LWJsdWUtNjAwIGRyb3Atc2hhZG93LXNtXCI+XHJcbi8vICAgICAgICAgICBNeSBUby1EbyBMaXN0IPCfjLhcclxuLy8gICAgICAgICA8L2gxPlxyXG5cclxuLy8gICAgICAgICA8Zm9ybSBvblN1Ym1pdD17YWRkVG9kb30gY2xhc3NOYW1lPVwiZmxleCBnYXAtMiBtYi02XCI+XHJcbi8vICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgdmFsdWU9e3RleHR9XHJcbi8vICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VGV4dChlLnRhcmdldC52YWx1ZSl9XHJcbi8vICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiQWRkIGEgbmV3IHRhc2suLi5cIlxyXG4vLyAgICAgICAgICAgICBjbGFzc05hbWU9XCJmbGV4LTEgcHgtNCBweS0yIGJvcmRlciBib3JkZXItYmx1ZS0yMDAgcm91bmRlZC1tZCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctYmx1ZS0yMDAgYmctd2hpdGUvNzBcIlxyXG4vLyAgICAgICAgICAgLz5cclxuLy8gICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbi8vICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTYgcHktMiBiZy1ibHVlLTUwMCBob3ZlcjpiZy1ibHVlLTYwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgc2hhZG93LW1kIGhvdmVyOnNoYWRvdy1sZyB0cmFuc2l0aW9uXCJcclxuLy8gICAgICAgICAgID5cclxuLy8gICAgICAgICAgICAgQWRkXHJcbi8vICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICA8L2Zvcm0+XHJcblxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG1iLTQgdGV4dC1zbSBmbGV4LXdyYXBcIj5cclxuLy8gICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMlwiPlxyXG4vLyAgICAgICAgICAgICB7W1wiYWxsXCIsIFwiYWN0aXZlXCIsIFwiY29tcGxldGVkXCJdLm1hcCgoZikgPT4gKFxyXG4vLyAgICAgICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgICAgIGtleT17Zn1cclxuLy8gICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcclxuLy8gICAgICAgICAgICAgICAgICAgc2V0RmlsdGVyKGYgYXMgYW55KTtcclxuLy8gICAgICAgICAgICAgICAgICAgc2V0UGFnZSgxKTtcclxuLy8gICAgICAgICAgICAgICAgIH19XHJcbi8vICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BweC0zIHB5LTEgcm91bmRlZC1tZCB0cmFuc2l0aW9uICR7XHJcbi8vICAgICAgICAgICAgICAgICAgIGZpbHRlciA9PT0gZlxyXG4vLyAgICAgICAgICAgICAgICAgICAgID8gXCJiZy1ibHVlLTUwMCB0ZXh0LXdoaXRlXCJcclxuLy8gICAgICAgICAgICAgICAgICAgICA6IFwiYmctYmx1ZS0xMDAgaG92ZXI6YmctYmx1ZS0yMDAgdGV4dC1ibHVlLTcwMFwiXHJcbi8vICAgICAgICAgICAgICAgICB9YH1cclxuLy8gICAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgICB7ZlswXS50b1VwcGVyQ2FzZSgpICsgZi5zbGljZSgxKX1cclxuLy8gICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgICAgKSl9XHJcbi8vICAgICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRleHQtZ3JheS02MDBcIj5cclxuLy8gICAgICAgICAgICAge3RvZG9zLmZpbHRlcigodCkgPT4gIXQuY29tcGxldGVkKS5sZW5ndGh9IGxlZnRcclxuLy8gICAgICAgICAgIDwvc3Bhbj5cclxuLy8gICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgPHVsIGNsYXNzTmFtZT1cImRpdmlkZS15IGRpdmlkZS1ibHVlLTEwMFwiPlxyXG4vLyAgICAgICAgICAge3BhZ2luYXRlZFRvZG9zLm1hcCgodG9kbykgPT4gKFxyXG4vLyAgICAgICAgICAgICA8bGlcclxuLy8gICAgICAgICAgICAgICBrZXk9e3RvZG8uaWR9XHJcbi8vICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIHB5LTMgcHgtMiBob3ZlcjpiZy1ibHVlLTUwLzcwIHJvdW5kZWQtbWQgdHJhbnNpdGlvblwiXHJcbi8vICAgICAgICAgICAgID5cclxuLy8gICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0zXCI+XHJcbi8vICAgICAgICAgICAgICAgICA8aW5wdXRcclxuLy8gICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcclxuLy8gICAgICAgICAgICAgICAgICAgY2hlY2tlZD17dG9kby5jb21wbGV0ZWR9XHJcbi8vICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoKSA9PiB0b2dnbGVUb2RvKHRvZG8uaWQpfVxyXG4vLyAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LTQgaC00IGFjY2VudC1ibHVlLTUwMFwiXHJcbi8vICAgICAgICAgICAgICAgICAvPlxyXG4vLyAgICAgICAgICAgICAgICAgPHNwYW5cclxuLy8gICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHtcclxuLy8gICAgICAgICAgICAgICAgICAgICB0b2RvLmNvbXBsZXRlZFxyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgPyBcImxpbmUtdGhyb3VnaCB0ZXh0LWJsdWUtNDAwXCJcclxuLy8gICAgICAgICAgICAgICAgICAgICAgIDogXCJ0ZXh0LWdyYXktNzAwXCJcclxuLy8gICAgICAgICAgICAgICAgICAgfWB9XHJcbi8vICAgICAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgICAgIHt0b2RvLnRleHR9XHJcbi8vICAgICAgICAgICAgICAgICA8L3NwYW4+XHJcbi8vICAgICAgICAgICAgICAgPC9kaXY+XHJcbi8vICAgICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gZGVsZXRlVG9kbyh0b2RvLmlkKX1cclxuLy8gICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtcmVkLTQwMCBob3Zlcjp0ZXh0LXJlZC02MDAgdGV4dC1zbSB0cmFuc2l0aW9uXCJcclxuLy8gICAgICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgICAgICBEZWxldGVcclxuLy8gICAgICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICAgICAgPC9saT5cclxuLy8gICAgICAgICAgICkpfVxyXG4vLyAgICAgICAgIDwvdWw+XHJcblxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBmbGV4LXdyYXAganVzdGlmeS1iZXR3ZWVuIGl0ZW1zLWNlbnRlciBtdC02IGdhcC0zIHRleHQtc21cIj5cclxuLy8gICAgICAgICAgIDxidXR0b25cclxuLy8gICAgICAgICAgICAgb25DbGljaz17Y2xlYXJDb21wbGV0ZWR9XHJcbi8vICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTMgcHktMSBiZy1ibHVlLTEwMCBob3ZlcjpiZy1ibHVlLTIwMCByb3VuZGVkLW1kIHRleHQtYmx1ZS03MDAgdHJhbnNpdGlvblwiXHJcbi8vICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgIENsZWFyIENvbXBsZXRlZFxyXG4vLyAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8YnV0dG9uXHJcbi8vICAgICAgICAgICAgIG9uQ2xpY2s9e21hcmtBbGxEb25lfVxyXG4vLyAgICAgICAgICAgICBjbGFzc05hbWU9XCJweC0zIHB5LTEgYmctZ3JlZW4tNDAwIGhvdmVyOmJnLWdyZWVuLTUwMCB0ZXh0LXdoaXRlIHJvdW5kZWQtbWQgdHJhbnNpdGlvblwiXHJcbi8vICAgICAgICAgICA+XHJcbi8vICAgICAgICAgICAgIE1hcmsgQWxsIERvbmVcclxuLy8gICAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICBvbkNsaWNrPXtkZWxldGVBbGx9XHJcbi8vICAgICAgICAgICAgIGNsYXNzTmFtZT1cInB4LTMgcHktMSBiZy1yZWQtNDAwIGhvdmVyOmJnLXJlZC01MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kIHRyYW5zaXRpb25cIlxyXG4vLyAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICBEZWxldGUgQWxsXHJcbi8vICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICA8L2Rpdj5cclxuXHJcbi8vICAgICAgICAgey8qIFBhZ2luYXRpb24gQ29udHJvbHMgKi99XHJcbi8vICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGp1c3RpZnktY2VudGVyIGdhcC00IG10LTggdGV4dC1zbVwiPlxyXG4vLyAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRQYWdlKChwKSA9PiBNYXRoLm1heChwIC0gMSwgMSkpfVxyXG4vLyAgICAgICAgICAgICBkaXNhYmxlZD17cGFnZSA9PT0gMX1cclxuLy8gICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIHJvdW5kZWQtbWQgJHtcclxuLy8gICAgICAgICAgICAgICBwYWdlID09PSAxXHJcbi8vICAgICAgICAgICAgICAgICA/IFwiYmctZ3JheS0xMDAgdGV4dC1ncmF5LTQwMCBjdXJzb3Itbm90LWFsbG93ZWRcIlxyXG4vLyAgICAgICAgICAgICAgICAgOiBcImJnLWJsdWUtMTAwIGhvdmVyOmJnLWJsdWUtMjAwIHRleHQtYmx1ZS03MDAgdHJhbnNpdGlvblwiXHJcbi8vICAgICAgICAgICAgIH1gfVxyXG4vLyAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICBQcmV2aW91c1xyXG4vLyAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LWJsdWUtNjAwXCI+XHJcbi8vICAgICAgICAgICAgIFBhZ2Uge3BhZ2V9IG9mIHt0b3RhbFBhZ2VzfVxyXG4vLyAgICAgICAgICAgPC9zcGFuPlxyXG4vLyAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRQYWdlKChwKSA9PiBNYXRoLm1pbihwICsgMSwgdG90YWxQYWdlcykpfVxyXG4vLyAgICAgICAgICAgICBkaXNhYmxlZD17cGFnZSA9PT0gdG90YWxQYWdlc31cclxuLy8gICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIHJvdW5kZWQtbWQgJHtcclxuLy8gICAgICAgICAgICAgICBwYWdlID09PSB0b3RhbFBhZ2VzXHJcbi8vICAgICAgICAgICAgICAgICA/IFwiYmctZ3JheS0xMDAgdGV4dC1ncmF5LTQwMCBjdXJzb3Itbm90LWFsbG93ZWRcIlxyXG4vLyAgICAgICAgICAgICAgICAgOiBcImJnLWJsdWUtMTAwIGhvdmVyOmJnLWJsdWUtMjAwIHRleHQtYmx1ZS03MDAgdHJhbnNpdGlvblwiXHJcbi8vICAgICAgICAgICAgIH1gfVxyXG4vLyAgICAgICAgICAgPlxyXG4vLyAgICAgICAgICAgICBOZXh0XHJcbi8vICAgICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L2Rpdj5cclxuLy8gICApO1xyXG4vLyB9XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TodoApp.tsx\n"));

/***/ })

});