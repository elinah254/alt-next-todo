/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/TodoApp.tsx":
/*!********************************!*\
  !*** ./components/TodoApp.tsx ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// type Todo = {\n//   id: string;\n//   text: string;\n//   completed: boolean;\n// };\n// export default function TodoApp() {\n//   const [todos, setTodos] = useState<Todo[]>([]);\n//   const [text, setText] = useState(\"\");\n//   const [filter, setFilter] = useState<\"all\" | \"active\" | \"completed\">(\"all\");\n//   useEffect(() => {\n//     const raw = localStorage.getItem(\"todos\");\n//     if (raw) setTodos(JSON.parse(raw));\n//   }, []);\n//   useEffect(() => {\n//     localStorage.setItem(\"todos\", JSON.stringify(todos));\n//   }, [todos]);\n//   const addTodo = (e?: React.FormEvent) => {\n//     e?.preventDefault();\n//     if (!text.trim()) return;\n//     setTodos((prev) => [{ id: Date.now().toString(), text, completed: false }, ...prev]);\n//     setText(\"\");\n//   };\n//   const toggleTodo = (id: string) => {\n//     setTodos((prev) =>\n//       prev.map((t) => (t.id === id ? { ...t, completed: !t.completed } : t))\n//     );\n//   };\n//   const deleteTodo = (id: string) => {\n//     setTodos((prev) => prev.filter((t) => t.id !== id));\n//   };\n//   const clearCompleted = () => {\n//     setTodos((prev) => prev.filter((t) => !t.completed));\n//   };\n//   const filtered = todos.filter((t) => {\n//     if (filter === \"all\") return true;\n//     if (filter === \"active\") return !t.completed;\n//     return t.completed;\n//   });\n//   return (\n//     <div className=\"bg-white rounded-2xl shadow p-6\">\n//       <h1 className=\"text-2xl font-semibold mb-4\">Todo</h1>\n//       <form onSubmit={addTodo} className=\"flex gap-2 mb-4\">\n//         <input\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Add a task...\"\n//           className=\"flex-1 px-4 py-2 border rounded-md focus:outline-none focus:ring focus:ring-blue-200\"\n//         />\n//         <button type=\"submit\" className=\"px-4 py-2 bg-blue-600 text-white rounded-md\">\n//           Add\n//         </button>\n//       </form>\n//       <div className=\"flex items-center justify-between mb-4\">\n//         <div className=\"flex gap-2\">\n//           {[\"all\", \"active\", \"completed\"].map((f) => (\n//             <button\n//               key={f}\n//               onClick={() => setFilter(f as any)}\n//               className={\n//                 filter === f ? \"px-3 py-1 rounded-md bg-blue-100\" : \"px-3 py-1 rounded-md\"\n//               }\n//             >\n//               {f[0].toUpperCase() + f.slice(1)}\n//             </button>\n//           ))}\n//         </div>\n//         <div className=\"text-sm text-gray-500\">\n//           {todos.filter((t) => !t.completed).length} left\n//         </div>\n//       </div>\n//       <ul className=\"divide-y\">\n//         {filtered.map((todo) => (\n//           <li key={todo.id} className=\"flex items-center justify-between py-3\">\n//             <div className=\"flex items-center gap-3\">\n//               <input\n//                 type=\"checkbox\"\n//                 checked={todo.completed}\n//                 onChange={() => toggleTodo(todo.id)}\n//                 className=\"w-4 h-4\"\n//               />\n//               <span className={todo.completed ? \"line-through text-gray-400\" : \"\"}>\n//                 {todo.text}\n//               </span>\n//             </div>\n//             <button onClick={() => deleteTodo(todo.id)} className=\"text-red-500 text-sm\">\n//               Delete\n//             </button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div className=\"flex items-center justify-between mt-4\">\n//         <button onClick={clearCompleted} className=\"text-sm text-gray-600\">\n//           Clear completed\n//         </button>\n//         <div className=\"text-sm text-gray-600\">{todos.length} total</div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvVG9kb0FwcC50c3giLCJtYXBwaW5ncyI6IkFBTUEsZ0JBQWdCO0FBQ2hCLHNEQUFzRDtBQUV0RCxnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCLGtCQUFrQjtBQUNsQix3QkFBd0I7QUFDeEIsS0FBSztBQUVMLHNDQUFzQztBQUN0QyxvREFBb0Q7QUFDcEQsMENBQTBDO0FBQzFDLGlGQUFpRjtBQUVqRixzQkFBc0I7QUFDdEIsaURBQWlEO0FBQ2pELDBDQUEwQztBQUMxQyxZQUFZO0FBRVosc0JBQXNCO0FBQ3RCLDREQUE0RDtBQUM1RCxpQkFBaUI7QUFFakIsK0NBQStDO0FBQy9DLDJCQUEyQjtBQUMzQixnQ0FBZ0M7QUFDaEMsNEZBQTRGO0FBQzVGLG1CQUFtQjtBQUNuQixPQUFPO0FBRVAseUNBQXlDO0FBQ3pDLHlCQUF5QjtBQUN6QiwrRUFBK0U7QUFDL0UsU0FBUztBQUNULE9BQU87QUFFUCx5Q0FBeUM7QUFDekMsMkRBQTJEO0FBQzNELE9BQU87QUFFUCxtQ0FBbUM7QUFDbkMsNERBQTREO0FBQzVELE9BQU87QUFFUCwyQ0FBMkM7QUFDM0MseUNBQXlDO0FBQ3pDLG9EQUFvRDtBQUNwRCwwQkFBMEI7QUFDMUIsUUFBUTtBQUVSLGFBQWE7QUFDYix3REFBd0Q7QUFDeEQsOERBQThEO0FBQzlELDhEQUE4RDtBQUM5RCxpQkFBaUI7QUFDakIseUJBQXlCO0FBQ3pCLHNEQUFzRDtBQUN0RCx3Q0FBd0M7QUFDeEMsNkdBQTZHO0FBQzdHLGFBQWE7QUFDYix5RkFBeUY7QUFDekYsZ0JBQWdCO0FBQ2hCLG9CQUFvQjtBQUNwQixnQkFBZ0I7QUFFaEIsaUVBQWlFO0FBQ2pFLHVDQUF1QztBQUN2Qyx5REFBeUQ7QUFDekQsc0JBQXNCO0FBQ3RCLHdCQUF3QjtBQUN4QixvREFBb0Q7QUFDcEQsNEJBQTRCO0FBQzVCLDZGQUE2RjtBQUM3RixrQkFBa0I7QUFDbEIsZ0JBQWdCO0FBQ2hCLGtEQUFrRDtBQUNsRCx3QkFBd0I7QUFDeEIsZ0JBQWdCO0FBQ2hCLGlCQUFpQjtBQUNqQixrREFBa0Q7QUFDbEQsNERBQTREO0FBQzVELGlCQUFpQjtBQUNqQixlQUFlO0FBRWYsa0NBQWtDO0FBQ2xDLG9DQUFvQztBQUNwQyxrRkFBa0Y7QUFDbEYsd0RBQXdEO0FBQ3hELHVCQUF1QjtBQUN2QixrQ0FBa0M7QUFDbEMsMkNBQTJDO0FBQzNDLHVEQUF1RDtBQUN2RCxzQ0FBc0M7QUFDdEMsbUJBQW1CO0FBQ25CLHNGQUFzRjtBQUN0Riw4QkFBOEI7QUFDOUIsd0JBQXdCO0FBQ3hCLHFCQUFxQjtBQUNyQiw0RkFBNEY7QUFDNUYsdUJBQXVCO0FBQ3ZCLHdCQUF3QjtBQUN4QixrQkFBa0I7QUFDbEIsY0FBYztBQUNkLGNBQWM7QUFFZCxpRUFBaUU7QUFDakUsOEVBQThFO0FBQzlFLDRCQUE0QjtBQUM1QixvQkFBb0I7QUFDcEIsNEVBQTRFO0FBQzVFLGVBQWU7QUFDZixhQUFhO0FBQ2IsT0FBTztBQUNQLElBQUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9Ub2RvQXBwLnRzeD9iNDIwIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuXHJcblxyXG5cclxuXHJcbi8vIFwidXNlIGNsaWVudFwiO1xyXG4vLyBpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuLy8gdHlwZSBUb2RvID0ge1xyXG4vLyAgIGlkOiBzdHJpbmc7XHJcbi8vICAgdGV4dDogc3RyaW5nO1xyXG4vLyAgIGNvbXBsZXRlZDogYm9vbGVhbjtcclxuLy8gfTtcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvZG9BcHAoKSB7XHJcbi8vICAgY29uc3QgW3RvZG9zLCBzZXRUb2Rvc10gPSB1c2VTdGF0ZTxUb2RvW10+KFtdKTtcclxuLy8gICBjb25zdCBbdGV4dCwgc2V0VGV4dF0gPSB1c2VTdGF0ZShcIlwiKTtcclxuLy8gICBjb25zdCBbZmlsdGVyLCBzZXRGaWx0ZXJdID0gdXNlU3RhdGU8XCJhbGxcIiB8IFwiYWN0aXZlXCIgfCBcImNvbXBsZXRlZFwiPihcImFsbFwiKTtcclxuXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGNvbnN0IHJhdyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwidG9kb3NcIik7XHJcbi8vICAgICBpZiAocmF3KSBzZXRUb2RvcyhKU09OLnBhcnNlKHJhdykpO1xyXG4vLyAgIH0sIFtdKTtcclxuXHJcbi8vICAgdXNlRWZmZWN0KCgpID0+IHtcclxuLy8gICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwidG9kb3NcIiwgSlNPTi5zdHJpbmdpZnkodG9kb3MpKTtcclxuLy8gICB9LCBbdG9kb3NdKTtcclxuXHJcbi8vICAgY29uc3QgYWRkVG9kbyA9IChlPzogUmVhY3QuRm9ybUV2ZW50KSA9PiB7XHJcbi8vICAgICBlPy5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyAgICAgaWYgKCF0ZXh0LnRyaW0oKSkgcmV0dXJuO1xyXG4vLyAgICAgc2V0VG9kb3MoKHByZXYpID0+IFt7IGlkOiBEYXRlLm5vdygpLnRvU3RyaW5nKCksIHRleHQsIGNvbXBsZXRlZDogZmFsc2UgfSwgLi4ucHJldl0pO1xyXG4vLyAgICAgc2V0VGV4dChcIlwiKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCB0b2dnbGVUb2RvID0gKGlkOiBzdHJpbmcpID0+IHtcclxuLy8gICAgIHNldFRvZG9zKChwcmV2KSA9PlxyXG4vLyAgICAgICBwcmV2Lm1hcCgodCkgPT4gKHQuaWQgPT09IGlkID8geyAuLi50LCBjb21wbGV0ZWQ6ICF0LmNvbXBsZXRlZCB9IDogdCkpXHJcbi8vICAgICApO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGRlbGV0ZVRvZG8gPSAoaWQ6IHN0cmluZykgPT4ge1xyXG4vLyAgICAgc2V0VG9kb3MoKHByZXYpID0+IHByZXYuZmlsdGVyKCh0KSA9PiB0LmlkICE9PSBpZCkpO1xyXG4vLyAgIH07XHJcblxyXG4vLyAgIGNvbnN0IGNsZWFyQ29tcGxldGVkID0gKCkgPT4ge1xyXG4vLyAgICAgc2V0VG9kb3MoKHByZXYpID0+IHByZXYuZmlsdGVyKCh0KSA9PiAhdC5jb21wbGV0ZWQpKTtcclxuLy8gICB9O1xyXG5cclxuLy8gICBjb25zdCBmaWx0ZXJlZCA9IHRvZG9zLmZpbHRlcigodCkgPT4ge1xyXG4vLyAgICAgaWYgKGZpbHRlciA9PT0gXCJhbGxcIikgcmV0dXJuIHRydWU7XHJcbi8vICAgICBpZiAoZmlsdGVyID09PSBcImFjdGl2ZVwiKSByZXR1cm4gIXQuY29tcGxldGVkO1xyXG4vLyAgICAgcmV0dXJuIHQuY29tcGxldGVkO1xyXG4vLyAgIH0pO1xyXG5cclxuLy8gICByZXR1cm4gKFxyXG4vLyAgICAgPGRpdiBjbGFzc05hbWU9XCJiZy13aGl0ZSByb3VuZGVkLTJ4bCBzaGFkb3cgcC02XCI+XHJcbi8vICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LXNlbWlib2xkIG1iLTRcIj5Ub2RvPC9oMT5cclxuLy8gICAgICAgPGZvcm0gb25TdWJtaXQ9e2FkZFRvZG99IGNsYXNzTmFtZT1cImZsZXggZ2FwLTIgbWItNFwiPlxyXG4vLyAgICAgICAgIDxpbnB1dFxyXG4vLyAgICAgICAgICAgdmFsdWU9e3RleHR9XHJcbi8vICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFRleHQoZS50YXJnZXQudmFsdWUpfVxyXG4vLyAgICAgICAgICAgcGxhY2Vob2xkZXI9XCJBZGQgYSB0YXNrLi4uXCJcclxuLy8gICAgICAgICAgIGNsYXNzTmFtZT1cImZsZXgtMSBweC00IHB5LTIgYm9yZGVyIHJvdW5kZWQtbWQgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOnJpbmcgZm9jdXM6cmluZy1ibHVlLTIwMFwiXHJcbi8vICAgICAgICAgLz5cclxuLy8gICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzc05hbWU9XCJweC00IHB5LTIgYmctYmx1ZS02MDAgdGV4dC13aGl0ZSByb3VuZGVkLW1kXCI+XHJcbi8vICAgICAgICAgICBBZGRcclxuLy8gICAgICAgICA8L2J1dHRvbj5cclxuLy8gICAgICAgPC9mb3JtPlxyXG5cclxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gbWItNFwiPlxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBnYXAtMlwiPlxyXG4vLyAgICAgICAgICAge1tcImFsbFwiLCBcImFjdGl2ZVwiLCBcImNvbXBsZXRlZFwiXS5tYXAoKGYpID0+IChcclxuLy8gICAgICAgICAgICAgPGJ1dHRvblxyXG4vLyAgICAgICAgICAgICAgIGtleT17Zn1cclxuLy8gICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBzZXRGaWx0ZXIoZiBhcyBhbnkpfVxyXG4vLyAgICAgICAgICAgICAgIGNsYXNzTmFtZT17XHJcbi8vICAgICAgICAgICAgICAgICBmaWx0ZXIgPT09IGYgPyBcInB4LTMgcHktMSByb3VuZGVkLW1kIGJnLWJsdWUtMTAwXCIgOiBcInB4LTMgcHktMSByb3VuZGVkLW1kXCJcclxuLy8gICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgID5cclxuLy8gICAgICAgICAgICAgICB7ZlswXS50b1VwcGVyQ2FzZSgpICsgZi5zbGljZSgxKX1cclxuLy8gICAgICAgICAgICAgPC9idXR0b24+XHJcbi8vICAgICAgICAgICApKX1cclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1ncmF5LTUwMFwiPlxyXG4vLyAgICAgICAgICAge3RvZG9zLmZpbHRlcigodCkgPT4gIXQuY29tcGxldGVkKS5sZW5ndGh9IGxlZnRcclxuLy8gICAgICAgICA8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcblxyXG4vLyAgICAgICA8dWwgY2xhc3NOYW1lPVwiZGl2aWRlLXlcIj5cclxuLy8gICAgICAgICB7ZmlsdGVyZWQubWFwKCh0b2RvKSA9PiAoXHJcbi8vICAgICAgICAgICA8bGkga2V5PXt0b2RvLmlkfSBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW4gcHktM1wiPlxyXG4vLyAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGdhcC0zXCI+XHJcbi8vICAgICAgICAgICAgICAgPGlucHV0XHJcbi8vICAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxyXG4vLyAgICAgICAgICAgICAgICAgY2hlY2tlZD17dG9kby5jb21wbGV0ZWR9XHJcbi8vICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KCkgPT4gdG9nZ2xlVG9kbyh0b2RvLmlkKX1cclxuLy8gICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInctNCBoLTRcIlxyXG4vLyAgICAgICAgICAgICAgIC8+XHJcbi8vICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPXt0b2RvLmNvbXBsZXRlZCA/IFwibGluZS10aHJvdWdoIHRleHQtZ3JheS00MDBcIiA6IFwiXCJ9PlxyXG4vLyAgICAgICAgICAgICAgICAge3RvZG8udGV4dH1cclxuLy8gICAgICAgICAgICAgICA8L3NwYW4+XHJcbi8vICAgICAgICAgICAgIDwvZGl2PlxyXG4vLyAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGRlbGV0ZVRvZG8odG9kby5pZCl9IGNsYXNzTmFtZT1cInRleHQtcmVkLTUwMCB0ZXh0LXNtXCI+XHJcbi8vICAgICAgICAgICAgICAgRGVsZXRlXHJcbi8vICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICAgICAgPC9saT5cclxuLy8gICAgICAgICApKX1cclxuLy8gICAgICAgPC91bD5cclxuXHJcbi8vICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1iZXR3ZWVuIG10LTRcIj5cclxuLy8gICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9e2NsZWFyQ29tcGxldGVkfSBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtZ3JheS02MDBcIj5cclxuLy8gICAgICAgICAgIENsZWFyIGNvbXBsZXRlZFxyXG4vLyAgICAgICAgIDwvYnV0dG9uPlxyXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1zbSB0ZXh0LWdyYXktNjAwXCI+e3RvZG9zLmxlbmd0aH0gdG90YWw8L2Rpdj5cclxuLy8gICAgICAgPC9kaXY+XHJcbi8vICAgICA8L2Rpdj5cclxuLy8gICApO1xyXG4vLyB9XHJcblxyXG5cclxuXHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/TodoApp.tsx\n"));

/***/ })

});